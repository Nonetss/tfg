/* Generated by Yosys 0.51+101 (git sha1 314842d2a, g++ 14.2.1 -fPIC -O3) */

module biestablejk_asincrono(J, K, clk, reset, Q);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  reg _07_ = 1'h0;
  wire _08_;
  reg _09_ = 1'h0;
  reg [25:0] _10_ = 26'h0000000;
  wire _11_;
  wire [25:0] _12_;
  wire [25:0] _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  input J;
  wire J;
  input K;
  wire K;
  output Q;
  wire Q;
  input clk;
  wire clk;
  wire clk_lento;
  wire [25:0] contador;
  wire dato;
  input reset;
  wire reset;
  assign _12_ = contador + 26'h0000001;
  assign _13_ = _00_ ? 26'h0000000 : _12_;
  assign _14_ = ~ J;
  assign _15_ = ~ K;
  assign _16_ = _15_ & _14_;
  assign _17_ = ~ J;
  assign _18_ = K & _17_;
  assign _01_ = ~ K;
  assign _02_ = _01_ & J;
  assign _03_ = ~ dato;
  assign _04_ = _02_ ? 1'h1 : _03_;
  assign _05_ = _18_ ? 1'h0 : _04_;
  assign _06_ = _16_ ? dato : _05_;
  always @(posedge clk_lento, posedge reset)
    if (reset) _07_ <= 1'h0;
    else _07_ <= _06_;
  assign _08_ = _00_ ? _11_ : clk_lento;
  always @(posedge clk)
    _09_ <= _08_;
  always @(posedge clk)
    _10_ <= _13_;
  assign _00_ = contador == 26'h2faf080;
  assign _11_ = ~ clk_lento;
  assign dato = _07_;
  assign clk_lento = _09_;
  assign contador = _10_;
  assign Q = dato;
endmodule
